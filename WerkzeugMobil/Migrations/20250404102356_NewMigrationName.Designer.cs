// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WerkzeugMobil.Data;

#nullable disable

namespace WerkzeugMobil.Migrations
{
    [DbContext(typeof(WerkzeugDbContext))]
    [Migration("20250404102356_NewMigrationName")]
    partial class NewMigrationName
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("WerkzeugMobil.DTO.ProjektDTO", b =>
                {
                    b.Property<string>("ProjektAddresse")
                        .HasColumnType("TEXT");

                    b.HasKey("ProjektAddresse");

                    b.ToTable("Projekte");
                });

            modelBuilder.Entity("WerkzeugMobil.DTO.ToolDTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ToolTypeCountsSerialized")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("ToolTypeCounts");

                    b.HasKey("Id");

                    b.ToTable("Tools");
                });

            modelBuilder.Entity("WerkzeugMobil.DTO.UserDTO", b =>
                {
                    b.Property<string>("Benutzername")
                        .HasColumnType("TEXT");

                    b.Property<string>("Passwort")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Benutzername");

                    b.ToTable("Benutzer");
                });

            modelBuilder.Entity("WerkzeugMobil.DTO.WerkzeugDto", b =>
                {
                    b.Property<string>("WerkzeugId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Art")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Beschreibung")
                        .HasColumnType("TEXT");

                    b.PrimitiveCollection<string>("History")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Lager")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Marke")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProjektAdresse")
                        .HasColumnType("TEXT");

                    b.HasKey("WerkzeugId");

                    b.HasIndex("ProjektAdresse");

                    b.ToTable("Werkzeuge");
                });

            modelBuilder.Entity("WerkzeugMobil.DTO.WerkzeugDto", b =>
                {
                    b.HasOne("WerkzeugMobil.DTO.ProjektDTO", "Projekt")
                        .WithMany("Werkzeuge")
                        .HasForeignKey("ProjektAdresse");

                    b.Navigation("Projekt");
                });

            modelBuilder.Entity("WerkzeugMobil.DTO.ProjektDTO", b =>
                {
                    b.Navigation("Werkzeuge");
                });
#pragma warning restore 612, 618
        }
    }
}
